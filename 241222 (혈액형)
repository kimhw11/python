class Human:
    ABO_bloodType = {
        "A": ["AA","AO"],
        "B": ["BB","BO"],
        "O": ["OO"],
        "AB":["AB"]}

    def __init__(self, bloodType = None):
        self.bloodType = bloodType
        self.Dad = None
        self.Mom = None
        self.Son = None

    def set_parent(self, Dad=None, Mom=None, Son=None):
        self.Dad = Dad
        self.Mom = Mom
        self.Son = Son


    def get_my_bloodType(self):
        dad_bloodType = self.ABO_bloodType[self.Dad.bloodType]
        mom_bloodType = self.ABO_bloodType[self.Mom.bloodType]
        son_bloodType = self.ABO_bloodType[self.Son.bloodType]

        if self.bloodType:
            if self.bloodType == 'O' and (dad_bloodType[0] == 'AB' and mom_bloodType[0] == 'OO') or (
                    dad_bloodType[0] == 'OO' and mom_bloodType[0] == 'AB'):
                return "Cis-AB형 유전"

            else:
                possible_bloodType = set()
                # 가능한 혈액형 판단
                for d_bloodType in dad_bloodType:
                    for m_bloodType in mom_bloodType:
                        for dbt in d_bloodType:
                            for mbt in m_bloodType:
                                new_bloodType = ''.join(sorted([dbt, mbt]))
                                possible_bloodType.add(new_bloodType)
                print(possible_bloodType)

                flag = False
                for s_bloodType in son_bloodType:
                    if s_bloodType in possible_bloodType:
                        flag = True

                if flag:
                    return "돌연변이의 가능성 적음"
                else:
                    return "다른 돌연변이일 가능성 높음"
        else:
            return None

A = Human(input())
B = Human(input())
C = Human(input())
C.set_parent(A,B,C)
print(C.get_my_bloodType())
