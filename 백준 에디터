# 리스트 pop,insert 사용 > 시간 초과

N = input() # 초기 문자열

M = int(input()) # 입력할 명령어의 개수

C = len(N) # 현재 커서 위치

li_N = [x for x in N] # ['a', 'b', 'c', 'd']

for i in range(M):
    edit = input().split() #입력받은 명령어

    if edit[0] == 'L' and C != 0:
        C -= 1

    elif edit[0] == 'D' and C != len(N):
        C += 1

    elif edit[0] == 'B' and C != 0:
        li_N.pop(C-1)
        if C != 0:
            C -= 1

    elif edit[0] == 'P':
        li_N.insert(C,edit[1])
        C += 1

print("".join(li_N))

------------------------------------------------------------------------

# 리스트 슬라이싱 이용 > 시간 초과

import sys

input = sys.stdin.readline

N = input().rstrip() # 초기 문자열

M = int(input().rstrip()) # 명령어 개수

d = [x for x in N] # deque(['a', 'b', 'c', 'd'])

C = len(N) # 커서의 처음 위치

for _ in range(M):
    edit = input().rstrip().split()
    # 커서 왼쪽으로
    if edit[0] == 'L' and C != 0:
        C -= 1
    # 커서 오른쪽으로
    elif edit[0] == 'D' and C != len(N):
        C += 1
    # 커서 왼쪽 문자 삭제
    elif edit[0] == 'B' and C != 0:
        l1,l2 = d[:C],d[C:]
        l1.pop()
        d = l1 + l2

    # 커서 왼쪽에 문자 삽입
    elif edit[0] == 'P':
        l1,l2 = d[:C],d[C:]
        l1.append(edit[1])
        C += 1
        d = l1 + l2

print("".join(d))

